@Library('jenkins-pipeline-shared-libraries')_

pipeline {
    agent {
        label 'kogito-cloud'
    }
    tools {
        maven 'kie-maven-3.6.2'
        jdk 'kie-jdk11'
    }
    triggers {
        cron ('H 10 * * *')
    }
    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')
        timeout(time: 360, unit: 'MINUTES')
    }
    environment {
        KOGITO_CI_EMAIL_TO = credentials('KOGITO_CI_EMAIL_TO')
    }
    stages {
        stage('Initialize') {
            steps {
                script {
                    mailer.buildLogScriptPR()

                    checkoutRepo("kogito-runtimes")
                    checkoutRepo("kogito-apps")
                    checkoutRepo("kogito-examples")
                }
            }
        }
        stage('Build kogito-runtimes') {
            steps {
                script {
                    mavenCleanInstallNative("kogito-runtimes")
                }
            }
            post {
                always {
                    saveReports()
                }
            }
        }
        stage('Build kogito-apps') {
            steps {
                script {
                    mavenCleanInstall("kogito-apps")
                }
            }
            post {
                always {
                    saveReports()
                }
            }
        }
        stage('Build kogito-examples') {
            steps {
                script {
                    mavenCleanInstallNative("kogito-examples")
                }
            }
            post {
                always {
                    saveReports()
                }
            }
        }
    }
    post {
        unsuccessful {
            sendNotification()
        }
        always {
            junit '**/target/surefire-reports/**/*.xml'
            cleanWs()
        }
    }
}

void sendNotification(){
    emailext body: "Kogito daily native #${BUILD_NUMBER} was: ${currentBuild.currentResult}\nPlease look here: ${BUILD_URL}",
             subject: "[${env.BRANCH_NAME}][d] Runtimes native",
             to: env.KOGITO_CI_EMAIL_TO
}

void saveReports(boolean allowEmpty=false){
    junit testResults: '**/target/surefire-reports/**/*.xml, **/target/failsafe-reports/**/*.xml', allowEmptyResults: allowEmpty
}

void checkoutRepo(String repoName, String dirName=repoName) {
    dir(dirName) {
        checkout(githubscm.resolveRepository(repoName, "kiegroup", env.BRANCH_NAME, false))
    }
}

void mavenCleanInstallNative(String dirName) {
    mavenCleanInstall(dirName, "-Pnative -Dquarkus.native.container-build=true -Dquarkus.native.container-runtime=docker")
}

void mavenCleanInstall(String dirName, String extraArgs = ""){
    dir(dirName){
        maven.runMavenWithSubmarineSettings("clean install ${extraArgs}", false)
    }
}
