commit fc6d36464409538a47d850d95c13e358a9248471
Author: radtriste <radtriste@jenkins.redhat>
Date:   Wed Apr 19 13:32:35 2023 +0200

    patch: Spring Boot 3 updates

diff --git a/springboot/addons/jobs/src/main/java/org/kie/kogito/jobs/management/springboot/SpringRestJobsService.java b/springboot/addons/jobs/src/main/java/org/kie/kogito/jobs/management/springboot/SpringRestJobsService.java
index 40f39725ab..4fa442d337 100644
--- a/springboot/addons/jobs/src/main/java/org/kie/kogito/jobs/management/springboot/SpringRestJobsService.java
+++ b/springboot/addons/jobs/src/main/java/org/kie/kogito/jobs/management/springboot/SpringRestJobsService.java
@@ -26,6 +26,7 @@ import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.http.HttpEntity;
 import org.springframework.http.HttpHeaders;
+import org.springframework.http.HttpStatusCode;
 import org.springframework.http.MediaType;
 import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Component;
@@ -82,7 +83,7 @@ public class SpringRestJobsService extends RestJobsService {
         ResponseEntity<String> result = restTemplate.postForEntity(getJobsServiceUri(),
                 request,
                 String.class);
-        if (result.getStatusCode().ordinal() == 200) {
+        if (result.getStatusCode().isSameCodeAs(HttpStatusCode.valueOf(200))) {
             LOGGER.debug("Creating of the job {} done with status code {} ", job, result.getStatusCode());
         }
         return job.getId();
diff --git a/springboot/addons/messaging/implementation/src/main/java/org/kie/kogito/addon/cloudevents/spring/SpringKafkaCloudEventEmitter.java b/springboot/addons/messaging/implementation/src/main/java/org/kie/kogito/addon/cloudevents/spring/SpringKafkaCloudEventEmitter.java
index 2d9f7e492e..2f8d239f2b 100644
--- a/springboot/addons/messaging/implementation/src/main/java/org/kie/kogito/addon/cloudevents/spring/SpringKafkaCloudEventEmitter.java
+++ b/springboot/addons/messaging/implementation/src/main/java/org/kie/kogito/addon/cloudevents/spring/SpringKafkaCloudEventEmitter.java
@@ -61,7 +61,6 @@ public class SpringKafkaCloudEventEmitter<M> implements EventEmitter {
                             env.getProperty("kogito.addon.cloudevents.kafka." + KogitoEventStreams.OUTGOING + "." + event.getType(),
                                     defaultTopicName),
                             configBean.useCloudEvents() ? ceMarshaller.marshall(event.asCloudEvent(ceMarshaller.cloudEventDataFactory())) : marshaller.marshall(event.getData()))
-                    .completable()
                     .thenApply(r -> null);
         } catch (IOException e) {
             throw new UncheckedIOException(e);
