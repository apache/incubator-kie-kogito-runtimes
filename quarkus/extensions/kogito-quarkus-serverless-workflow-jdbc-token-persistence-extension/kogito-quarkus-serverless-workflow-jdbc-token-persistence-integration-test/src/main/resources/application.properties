#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

quarkus.kogito.logger.always-include=true
quarkus.swagger-ui.always-include=true

kogito.persistence.type=jdbc
kogito.persistence.proto.marshaller=false
kogito.persistence.headers.enabled=true
quarkus.datasource.db-kind=postgresql
quarkus.datasource.devservices.image-name=mirror.gcr.io/postgres:15.9-alpine3.20
kie.flyway.enabled=true

quarkus.http.test-port=0
quarkus.log.level=INFO
quarkus.log.category."org.kie.kogito.testcontainers".level=WARN
quarkus.log.category."org.apache.kafka".level=WARN

# -------
# Token exchange support test properties, relates to the TokenExchangeIT and the token-exchange.sw.json
# -------
# 1) Configure the desired packages for the code generation, this information is basically source
quarkus.openapi-generator.codegen.spec.token_exchange_external_service_yaml.base-package=org.acme.externalexchangeservice

# 2) Configure the access url for the service.
quarkus.rest-client.token_exchange_external_service_yaml.url=${exchange-external-service-mock.url}
sonataflow.security.auth.with_exchange_oauth2.token-exchange.enabled=true
sonataflow.security.auth.with_exchange_oauth2.token-exchange.proactive-refresh-seconds=296
sonataflow.security.auth.token-exchange.monitor-rate-seconds=4
sonataflow.security.auth.with_exchange_and_propagation_oauth2.token-exchange.enabled=true

# 3) Configure the different propagation alternatives.
# default propagation for token_propagation_external_service1 invocation
quarkus.openapi-generator.token_exchange_external_service_yaml.auth.with_exchange_and_propagation_oauth2.token-propagation=true

# 4) Oidc clients for the services that has oauth2 security.
# Oidc client used to test with exchange
quarkus.oidc-client.with_exchange_oauth2.auth-server-url=${keycloak.mock.service.url}
quarkus.oidc-client.with_exchange_oauth2.token-path=${keycloak.mock.exchange-service.token-path}
quarkus.oidc-client.with_exchange_oauth2.discovery-enabled=false
quarkus.oidc-client.with_exchange_oauth2.client-id=kogito-app
quarkus.oidc-client.with_exchange_oauth2.grant.type=exchange
quarkus.oidc-client.with_exchange_oauth2.credentials.client-secret.method=basic
quarkus.oidc-client.with_exchange_oauth2.credentials.client-secret.value=secret

# Oidc client used to test without exchange
quarkus.oidc-client.without_exchange_oauth2.auth-server-url=${keycloak.mock.service.url}
quarkus.oidc-client.without_exchange_oauth2.token-path=${keycloak.mock.service.token-path}
quarkus.oidc-client.without_exchange_oauth2.discovery-enabled=false
quarkus.oidc-client.without_exchange_oauth2.client-id=kogito-app
quarkus.oidc-client.without_exchange_oauth2.grant.type=client
quarkus.oidc-client.without_exchange_oauth2.credentials.client-secret.method=basic
quarkus.oidc-client.without_exchange_oauth2.credentials.client-secret.value=secret

# Oidc client used to test with exchange and with propagation
quarkus.oidc-client.with_exchange_and_propagation_oauth2.auth-server-url=${keycloak.mock.service.url}
quarkus.oidc-client.with_exchange_and_propagation_oauth2.token-path=${keycloak.mock.exchange-service.token-path}
quarkus.oidc-client.with_exchange_and_propagation_oauth2.discovery-enabled=false
quarkus.oidc-client.with_exchange_and_propagation_oauth2.client-id=kogito-app
quarkus.oidc-client.with_exchange_and_propagation_oauth2.grant.type=exchange
quarkus.oidc-client.with_exchange_and_propagation_oauth2.credentials.client-secret.method=basic
quarkus.oidc-client.with_exchange_and_propagation_oauth2.credentials.client-secret.value=secret

# --------- END TokenExchangeIT ------------

mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-processinstances-events.group.id=kogito-data-index-it
mp.messaging.outgoing.kogito-processinstances-events.auto.offset.reset=latest

mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-usertaskinstances-events.group.id=kogito-data-index-it
mp.messaging.outgoing.kogito-usertaskinstances-events.auto.offset.reset=latest

mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-variables-events.group.id=kogito-data-index-it
mp.messaging.outgoing.kogito-variables-events.auto.offset.reset=latest

mp.messaging.outgoing.kogito-processdefinitions-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processdefinitions-events.topic=kogito-processdefinitions-events
mp.messaging.outgoing.kogito-processdefinitions-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-processdefinitions-events.group.id=kogito-data-index-it
mp.messaging.outgoing.kogito-processdefinitions-events.auto.offset.reset=latest

quarkus.native.additional-build-args=-H:SerializationConfigurationResources=serialization-config.json
# Maximum Java heap to be used during the native image generation
quarkus.native.native-image-xmx=8g

quarkus.http.auth.basic=true
quarkus.http.auth.permission.default.paths=/secure/*
quarkus.http.auth.permission.default.policy=authenticated

quarkus.security.users.embedded.enabled=true
quarkus.security.users.embedded.plain-text=true
quarkus.security.users.embedded.users.buddy=buddy
quarkus.log.category."org.apache.http".level=INFO

