@Library('jenkins-pipeline-shared-libraries')_

pipeline {
    agent {
        label 'kie-rhel7 && kie-mem16g'
    }
    tools {
        maven 'kie-maven-3.6.2'
        jdk 'kie-jdk11'
    }
    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')
        timeout(time: 90, unit: 'MINUTES')
    }
    environment {
        // query mvn to get the latest version
        DROOLS_VERSION = """${sh (
            script: '$(mvn versions:display-property-updates -DincludeProperties=version.org.kie7 -DallowSnapshots -N  | grep version.org.kie7| cut -d" " -f8))'
            returnStdout: true).trim()}"""
        MAVEN_EXTRA_ARGS="-Dversion.org.kie7=${DROOLS_VERSION}"
    }
    stages {
        stage('Initialize') {
            steps {
                sh 'printenv'
                echo "Latest kie7 verson is: ${DROOLS_VERSION}"
            }
        }
        stage('build sh script') {
            steps {
                script {
                    mailer.buildLogScriptPR()
                }
            }
        }
        stage('Build kogito-runtimes') {
            steps {
                script {
                    maven.runMavenWithSubmarineSettings("clean install ${MAVEN_EXTRA_ARGS}", false)
                }
            }
        }
        stage('Build kogito-apps') {
            steps {
                dir("kogito-apps") {
                    script {
                        githubscm.checkoutIfExists('kogito-apps', "$CHANGE_AUTHOR", "$CHANGE_BRANCH", 'kiegroup', "$CHANGE_TARGET")
                        maven.runMavenWithSubmarineSettings("clean install ${MAVEN_EXTRA_ARGS}", false)
                    }
                }
            }
        }
        stage('Build kogito-examples') {
            steps {
                dir("kogito-examples") {
                    script {
                        githubscm.checkoutIfExists('kogito-examples', "$CHANGE_AUTHOR", "$CHANGE_BRANCH", 'kiegroup', "$CHANGE_TARGET")
                        maven.runMavenWithSubmarineSettings("clean install ${MAVEN_EXTRA_ARGS}", false)
                    }
                }
                // Use a separate dir for persistence to not overwrite the test results
                dir("kogito-examples-persistence") {
                    script {
                        githubscm.checkoutIfExists('kogito-examples', "$CHANGE_AUTHOR", "$CHANGE_BRANCH", 'kiegroup', "$CHANGE_TARGET")
                        // Don't run with tests so far, see: https://github.com/quarkusio/quarkus/issues/6885
                        maven.runMavenWithSubmarineSettings("clean install ${MAVEN_EXTRA_ARGS} -Ppersistence", true)
                    }
                }
            }
        }
    }

    }
    post {
        failure {
            emailext body: 'Kogito daily Drools #${BUILD_NUMBER} was: ' + "${currentBuild.currentResult}" +  '\n' +
                    'Please look here: ${BUILD_URL} ',
                     subject: 'Kogito daily Drools #${BRANCH_NAME}',
                     to: env.KOGITO_CI_EMAIL_TO
        }
        unstable {
            emailext body: 'Kogito daily Drools #${BUILD_NUMBER} was: ' + "${currentBuild.currentResult}" +  '\n' +
                     'Please look here: ${BUILD_URL} ',
                     subject: 'Kogito daily Drools #${BRANCH_NAME}',
                     to: env.KOGITO_CI_EMAIL_TO
        }
        always {
            junit '**/target/surefire-reports/**/*.xml'
            cleanWs()
        }
    }
}
