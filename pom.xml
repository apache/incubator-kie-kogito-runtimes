<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.kie.kogito</groupId>
  <artifactId>kogito-runtimes</artifactId>
  <version>8.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Kogito Runtimes</name>
  <description>Kogito Runtimes</description>

  <properties>
    <!--
      CONVENTIONS:
      - A version property must be specified in the format "version.{groupId}", optionally with a suffix to make it unique.
      - Version properties must be sorted alphabetically in blocks (other form of sorting were found to be unclear and ambiguous).
    -->

    <!-- Internal dependencies -->
    <version.org.kie.kogito>8.0.0-SNAPSHOT</version.org.kie.kogito>
    <version.org.drools>${version.org.kie.kogito}</version.org.drools>
    <version.org.drools.droolsjbpm-integration>${version.org.kie.kogito}</version.org.drools.droolsjbpm-integration>
    <version.org.jbpm>${version.org.kie.kogito}</version.org.jbpm>

    <!-- dependencies versions -->
    <version.org.antlr>3.5.2</version.org.antlr>
    <version.org.antlr4>4.7.2</version.org.antlr4>
    <version.org.slf4j>1.7.25</version.org.slf4j>
    <version.org.mvel>2.4.4.Final</version.org.mvel>
    <version.org.kie7>7.32.0.Final</version.org.kie7>
    <version.com.thoughtworks.xstream>1.4.11.1</version.com.thoughtworks.xstream>
    <version.javax.xml.bind>2.3.0</version.javax.xml.bind>
    <version.com.sun.xml.bind>2.3.0</version.com.sun.xml.bind>
    <version.javax.json.bind>1.0</version.javax.json.bind>
    <version.javax.json>1.1.4</version.javax.json>
    <version.javax.activation>1.2.0</version.javax.activation>
    <version.com.google.protobuf>3.6.1</version.com.google.protobuf>
    <version.org.eclipse.jdt>3.19.0</version.org.eclipse.jdt>
    <version.com.github.javaparser>3.13.10</version.com.github.javaparser>
    <version.com.fasterxml.jackson>2.9.10</version.com.fasterxml.jackson>
    <version.io.fabric8.kubernetes-client>4.6.2</version.io.fabric8.kubernetes-client>
    <version.com.squareup.okhttp3>3.12.6</version.com.squareup.okhttp3>
    <version.io.prometheus>0.5.0</version.io.prometheus>
    <version.org.jboss.spec.javax.ws.rs.jboss-jaxrs-api_2.1_spec>1.0.1.Final</version.org.jboss.spec.javax.ws.rs.jboss-jaxrs-api_2.1_spec>
    <version.cz.xtf>0.14</version.cz.xtf>
    <version.antapacheregexp>1.8.2</version.antapacheregexp>
    <version.org.reflections>0.9.11</version.org.reflections>
    <version.javax.inject>1</version.javax.inject>
    <version.javax.annotation-api>1.3.2</version.javax.annotation-api>

    <version.org.infinispan>10.0.0.Final</version.org.infinispan>
    <version.org.infinispan.image>10.0.0.Final-1</version.org.infinispan.image>
    <version.org.infinispan.protostream>4.3.0.Final</version.org.infinispan.protostream>

    <version.org.keycloak.image>8.0.1</version.org.keycloak.image>

    <version.com.oracle.substratevm>19.2.1</version.com.oracle.substratevm>
    <version.io.smallrye.reactive>1.0.8</version.io.smallrye.reactive>

    <version.org.springframework.kafka>2.2.2.RELEASE</version.org.springframework.kafka>

    <version.com.github.haifengl.smile>1.5.2</version.com.github.haifengl.smile>

    <version.org.junit.minor>5.0</version.org.junit.minor> <!-- so that org.junit.platform and org.junit can share the same minor version -->
    <version.org.junit>5.${version.org.junit.minor}</version.org.junit>
    <version.org.junit.jupiter>${version.org.junit}</version.org.junit.jupiter>
    <version.org.junit.vintage>${version.org.junit}</version.org.junit.vintage>
    <version.org.junit.platform>1.${version.org.junit.minor}</version.org.junit.platform> <!-- otherwise Quarkus brings its own, silently disabling some tests -->
    <version.org.assertj>3.13.2</version.org.assertj>
    <version.org.hamcrest>1.3</version.org.hamcrest> <!-- else old version coming from Mockito wins and breaks tests -->
    <version.org.mockito>3.0.0</version.org.mockito>
    <version.json-unit-assertj>2.9.0</version.json-unit-assertj>
    <version.testcontainers>1.12.3</version.testcontainers>
    <version.io.restassured>4.1.2</version.io.restassured>
    <version.ch.qos.logback>1.1.3</version.ch.qos.logback>
    <version.net.java.dev.glazedlists>1.8.0</version.net.java.dev.glazedlists>
    <version.ch.obermuhlner>2.0.1</version.ch.obermuhlner>
    <version.javassist>3.20.0-GA</version.javassist>
    <version.xmlunit>2.2.1</version.xmlunit>
    <version.maven>3.5.4</version.maven>
    <version.maven.plugin>3.4</version.maven.plugin>
    <version.plexus>1.6</version.plexus>
    <version.plexus.classworld>2.5.2</version.plexus.classworld>
    <version.plugin.plugin>3.5.2</version.plugin.plugin>
    <version.surefire>2.22.1</version.surefire> <!-- minimum required by JUnit 5 -->
    <version.clean.plugin>3.1.0</version.clean.plugin>
    <version.install.plugin>2.5.2</version.install.plugin>
    <version.site.plugin>3.7.1</version.site.plugin>
    <version.dependency.plugin>2.8</version.dependency.plugin>
    <version.deploy.plugin>2.8.2</version.deploy.plugin>
    <version.compiler.plugin>3.8.0-jboss-1</version.compiler.plugin>
    <version.antrun.plugin>1.8</version.antrun.plugin>
    <version.resources.plugin>3.1.0</version.resources.plugin>
    <version.exec.plugin>1.6.0</version.exec.plugin>
    <version.jar.plugin>3.1.0</version.jar.plugin>
    <version.source.plugin>3.0.1</version.source.plugin>
    <version.project.sources.plugin>0.3</version.project.sources.plugin>
    <version.build.helper.plugin>3.0.0</version.build.helper.plugin>
    <version.asciidoctor.plugin>1.5.2.1</version.asciidoctor.plugin>
    <version.native2ascii.plugin>1.0-beta-1</version.native2ascii.plugin>
    <version.copyrename.plugin>1.0</version.copyrename.plugin>
    <version.jdocbook.plugin>2.3.9</version.jdocbook.plugin>
    <version.invoker.plugin>2.0.0</version.invoker.plugin>
    <version.versions.plugin>2.1</version.versions.plugin>
    <version.shade.plugin>3.0.0</version.shade.plugin>
    <version.license.plugin>1.8.0</version.license.plugin>
    <version.javadoc.plugin>3.0.1</version.javadoc.plugin>
    <version.findbugs.plugin>3.0.5</version.findbugs.plugin>
    <version.swagger.plugin>2.1.0</version.swagger.plugin>
    <version.surefire.report.plugin>2.6</version.surefire.report.plugin>
    <version.javancss.plugin>2.0</version.javancss.plugin>
    <version.taglist.plugin>2.4</version.taglist.plugin>
    <version.jandex.plugin>1.0.6</version.jandex.plugin>

    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <checkstyle.header.template>.*</checkstyle.header.template>
    <checkstyle.header.extensions>java</checkstyle.header.extensions>

    <version.io.quarkus>1.1.0.Final</version.io.quarkus>

    <!--
      JaCoCo coverage data file location. Using a single file for appending in the project's root directory makes it
      possible to measure cross-module test coverage -->
    <!--suppress UnresolvedMavenProperty -->
    <version.org.jacoco.agent>0.8.4</version.org.jacoco.agent>
    <version.jacoco.plugin>${version.org.jacoco.agent}</version.jacoco.plugin>
    <jacoco.exec.file>${maven.multiModuleProjectDirectory}/target/jacoco.exec</jacoco.exec.file>
  </properties>

  <repositories>
    <!-- Bootstrap repository to locate the parent pom when the parent pom
      has not been build locally. -->
    <repository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <scm>
    <connection>scm:git:https://github.com/kiegroup/kogito-runtimes.git</connection>
    <developerConnection>scm:git:git@github.com:kiegroup/kogito-runtimes.git</developerConnection>
    <url>https://github.com/kiegroup/kogito-runtimes</url>
  </scm>

  <modules>
    <module>boms</module>
    <module>api</module>
    <module>drools</module>
    <module>jbpm</module>
    <module>optaplanner</module>
    <module>kogito-codegen</module>
    <module>addons</module>
    <module>kogito-maven-plugin</module>
    <module>archetypes</module>
    <module>data-index</module>
  </modules>

  <profiles>
    <profile>
      <id>run-code-coverage</id>
      <properties>
        <jacoco.excludes>*Lexer:org.kie.kogito.codegen.data.*</jacoco.excludes>
        <jacoco.agent.line>-javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${version.org.jacoco.agent}/org.jacoco.agent-${version.org.jacoco.agent}-runtime.jar=destfile=${jacoco.exec.file},append=true,excludes=${jacoco.excludes}</jacoco.agent.line>
        <surefire.argLine>
          -Dfile.encoding=${project.build.sourceEncoding}
          ${jacoco.agent.line}
        </surefire.argLine>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <configuration>
                  <properties>
                    <cargo.start.jvmargs>${jacoco.agent.line}</cargo.start.jvmargs>
                  </properties>
                </configuration>
              </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-surefire-plugin</artifactId>
              <configuration>
                <argLine>${surefire.argLine}</argLine>
              </configuration>
              <dependencies>
                <dependency>
                  <groupId>org.jacoco</groupId>
                  <artifactId>org.jacoco.agent</artifactId>
                  <version>${version.org.jacoco.agent}</version>
                  <classifier>runtime</classifier>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>sonarcloud-analysis</id>
      <properties>
        <sonar.jacoco.reportPaths>${jacoco.exec.file}</sonar.jacoco.reportPaths>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>kiegroup</sonar.organization>
        <!--suppress UnresolvedMavenProperty -->
        <sonar.login>${env.SONARCLOUD_TOKEN}</sonar.login>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>sonar</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <activation>
        <property>
          <name>env.CHANGE_ID</name>
        </property>
      </activation>
      <id>sonarcloud-analysis-pull-request</id>
      <properties>
        <sonar.pullrequest.provider>GitHub</sonar.pullrequest.provider>
        <!--suppress UnresolvedMavenProperty -->
        <sonar.pullrequest.branch>${env.CHANGE_BRANCH}</sonar.pullrequest.branch>
        <!--suppress UnresolvedMavenProperty -->
        <sonar.pullrequest.key>${env.CHANGE_ID}</sonar.pullrequest.key>
        <!--suppress UnresolvedMavenProperty -->
        <sonar.pullrequest.base>${env.CHANGE_TARGET}</sonar.pullrequest.base>
        <!--suppress UnresolvedMavenProperty -->
        <sonar.pullrequest.github.repository>${env.CHANGE_URL}</sonar.pullrequest.github.repository>
      </properties>
    </profile>
  </profiles>
</project>
