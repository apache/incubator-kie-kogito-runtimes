name: Runtime Build

on: [pull_request]

jobs:
  runtime-build:
    concurrency:
      group: runtimes_pr-${{ github.head_ref }}
      cancel-in-progress: true
    timeout-minutes: 120
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        java-version: [11]
        include:
          - os: ubuntu-latest
            BUILD_MVN_OPTS: "-Dvalidate-formatting"
          - os: windows-latest
            # let's skip integration test because docker is not configured on windows runners
            # see https://github.com/actions/virtual-environments/issues/1143
            BUILD_MVN_OPTS: "-DquickTests"
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: Maven Build
    steps:
      - name: Support longpaths in Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: git config --system core.longpaths true
      - name: Disk space report before modification
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          echo "Available storage:"
          df -h
      # Inspired to maximize-build-space action https://github.com/easimon/maximize-build-space
      - name: Free disk space (remove dotnet, android and haskell)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
      - name: Disk space report after modification
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          echo "Available storage:"
          df -h
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      # See https://docs.github.com/en/actions/guides/building-and-testing-java-with-maven#caching-dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build Chain ${{ matrix.java-version }}
        id: build-chain
        uses: kiegroup/github-action-build-chain@v2.6.3
        with:
          definition-file: https://raw.githubusercontent.com/${GROUP}/kogito-pipelines/${BRANCH}/.ci/pull-request-config.yaml
        env:
          BUILD_MVN_OPTS: ${{ matrix.BUILD_MVN_OPTS }}
      - name: Publish Test Report
        if: ${{ always() }}
        uses: ScaCap/action-surefire-report@v1.0.10
        with:
          fail_on_test_failures: true
          fail_if_no_tests: false
          skip_publishing: true
          report_paths: '**/*-reports/TEST-*.xml'
